% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{process}
\alias{process}
\alias{atmosSnow_ThresholdT}
\alias{evatransPotential_TurcWendling}
\alias{intercep_Full}
\alias{evatransActual_SupplyPow}
\alias{evatransActual_SupplyRatio}
\alias{evatransActual_VIC}
\alias{evatransActual_UBC}
\alias{snowMelt_Factor}
\alias{landLeafAreaRatio_WaterGAP3}
\alias{infilt_HBV}
\alias{percola_Arno}
\alias{baseflow_GR4Jfix}
\alias{baseflow_SupplyRatio}
\alias{lake_AcceptPow}
\alias{river_LinearResorvoir}
\alias{riverlak_LinearResorvoir}
\alias{reservoi_Hanasaki}
\alias{confluen_WaterGAP3}
\title{Hydrological Process}
\usage{
atmosSnow_ThresholdT(
  ATMOS_precipitation_mm,
  ATMOS_temperature_Cel,
  param_ATMOS_thr_Ts
)

evatransPotential_TurcWendling(
  ATMOS_temperature_Cel,
  ATMOS_solarRadiat_MJ,
  param_EVATRANS_tur_k
)

intercep_Full(
  ATMOS_precipitation_mm,
  LAND_interceptWater_mm,
  LAND_interceptCapacity_mm
)

evatransActual_SupplyPow(
  ATMOS_potentialEvatrans_mm,
  water_mm,
  capacity_mm,
  param_EVATRANS_sup_k,
  param_EVATRANS_sup_gamma
)

evatransActual_SupplyRatio(
  ATMOS_potentialEvatrans_mm,
  water_mm,
  capacity_mm,
  param_EVATRANS_sur_k
)

evatransActual_VIC(
  ATMOS_potentialEvatrans_mm,
  water_mm,
  capacity_mm,
  param_EVATRANS_vic_gamma
)

evatransActual_UBC(
  ATMOS_potentialEvatrans_mm,
  water_mm,
  capacity_mm,
  param_EVATRANS_ubc_gamma
)

snowMelt_Factor(
  SNOW_ice_mm,
  ATMOS_temperature_Cel,
  param_SNOW_fac_f,
  param_SNOW_fac_Tmelt
)

landLeafAreaRatio_WaterGAP3(
  ATMOS_temperature_Cel,
  ATMOS_precipitation_mm,
  CELL_latitude_deg,
  LAND_growUpDay_d,
  Time_dayOfYear_d
)

infilt_HBV(
  LAND_water_mm,
  SOIL_water_mm,
  SOIL_capacity_mm,
  param_INFILT_hbv_beta
)

percola_Arno(
  SOIL_water_mm,
  SOIL_capacity_mm,
  SOIL_potentialPercola_mm,
  param_PERCOLA_arn_thresh,
  param_PERCOLA_arn_k
)

baseflow_GR4Jfix(GROUND_water_mm, GROUND_capacity_mm, param_BASEFLOW_grf_gamma)

baseflow_SupplyRatio(GROUND_water_mm, param_BASEFLOW_sur_k)

lake_AcceptPow(
  Lake_water_m3,
  Lake_inflow_m3,
  Lake_capacity_m3,
  param_Lake_acp_storeFactor,
  param_Lake_acp_gamma
)

river_LinearResorvoir(
  RIVER_water_m3,
  RIVER_inflow_m3,
  RIVER_velocity_km,
  RIVER_length_km
)

riverlak_LinearResorvoir(
  Riverlak_water_m3,
  Riverlak_inflow_m3,
  Riverlak_capacity_m3,
  param_Riverlak_lin_storeFactor
)

reservoi_Hanasaki(
  Reservoi_water_m3,
  Reservoi_inflow_m3,
  Reservoi_capacity_m3,
  Reservoi_demand_m3,
  Reservoi_yearInflow_m3,
  Reservoi_yearDemand_m3,
  Reservoi_yearRelase_m3,
  Reservoi_isOperateStart_01,
  Reservoi_isIrrigate_01,
  param_Reservoi_han_alpha,
  param_Reservoi_han_kDemand
)

confluen_WaterGAP3(
  CONFLUEN_cellInflow_m3,
  RIVER_water_m3,
  RIVER_length_km,
  RIVER_velocity_km,
  CELL_cellNumberStep_int,
  CELL_inflowCellNumberStep_int
)
}
\arguments{
\item{ATMOS_precipitation_mm}{(mm/m2/TS) precipitaion volum}

\item{ATMOS_temperature_Cel}{(Cel) the average air temperature in the time phase}

\item{param_ATMOS_thr_Ts}{<-1, 3> (Cel) threshold air temperature that snow, parameter for [atmosSnow_ThresholdT()]}

\item{ATMOS_solarRadiat_MJ}{(MJ/m2/TS) the solar radiation that actually reaches the earths surface}

\item{param_EVATRANS_tur_k}{<0.6, 1> parameter for [evatransPotential_TurcWendling()], higher value when closer to the sea}

\item{LAND_interceptWater_mm}{(mm/m2) initial water volume that can be **intercepted**}

\item{LAND_interceptCapacity_mm}{(mm/m2) average intercept Capacity (maximal storage capacity)}

\item{ATMOS_potentialEvatrans_mm}{(mm/m2/TS) **potential / reference** evapotranspiration}

\item{water_mm}{(mm/m2/TS) water volume in `soilLy`, `groundLy` or intercept of `landLy`, same as `SOIL_water_mm`, `GROUND_water_mm` or `LAND_interceptWater_mm`}

\item{capacity_mm}{(mm/m2) water storage capacity in `soilLy`, `groundLy` or intercept of `landLy`, same as `SOIL_capacity_mm`, `GROUND_capacity_mm` or`LAND_interceptCapacity_mm`}

\item{param_EVATRANS_sup_k}{<0.1, 1> parameter for [evatransActual_SupplyPow()], ratio of this method}

\item{param_EVATRANS_sup_gamma}{<.1, 5> parameter for [evatransActual_SupplyPow()], exponent of this method}

\item{param_EVATRANS_sur_k}{<0.1, 1> parameter for [evatransActual_SupplyRatio()], ratio of potential ET, that is estimated as actually ET}

\item{param_EVATRANS_vic_gamma}{<0.2, 5> parameter for [evatransActual_VIC()]}

\item{param_EVATRANS_ubc_gamma}{<0.5, 2> parameter for [evatransActual_UBC()]}

\item{SNOW_ice_mm}{(mm/m2) water equivalent of **ice** in snowpack}

\item{param_SNOW_fac_f}{<0.05, 2> (mm/m2/h/Cel) potential melt volum per Cel per hour parameter for [snowMelt_Factor()]}

\item{param_SNOW_fac_Tmelt}{<0, 3> (Cel) snow melt temperature parameter for [snowMelt_Factor()]}

\item{LAND_growUpDay_d}{growup day}

\item{LAND_water_mm}{(mm/m2) **pounded water** volume in `landLy` and there is no limit, different than `LAND_interceptWater_mm`}

\item{SOIL_water_mm}{(mm/m2) water volume in `soilLy`}

\item{SOIL_capacity_mm}{(mm/m2) average soil Capacity (maximal storage capacity)}

\item{param_INFILT_hbv_beta}{<0.001, 5> parameters for [infilt_HBV()]}

\item{SOIL_potentialPercola_mm}{<0.01, 7> (mm/m2/TS) **potential** percolation}

\item{param_PERCOLA_arn_thresh}{<0.1, 0.9> coefficient parameter for [percola_ThreshPow()]}

\item{param_PERCOLA_arn_k}{<0.1, 1> exponential parameter for [percola_ThreshPow()]}

\item{GROUND_water_mm}{(mm/m2/TS) water volume in `groundLy`}

\item{GROUND_capacity_mm}{(mm/m2) water storage capacity in `groundLy`}

\item{param_BASEFLOW_grf_gamma}{<2, 7> exponential parameter for [baseflow_GR4Jfix()]}

\item{param_BASEFLOW_sur_k}{<0.01, 1> coefficient parameter for [baseflow_SupplyRatio()]}

\item{Lake_water_m3}{(m3) lake water volume}

\item{Lake_inflow_m3}{(m3/TS) inflow of the lake}

\item{Lake_capacity_m3}{(m3) capacity of the lake}

\item{param_Lake_acp_storeFactor}{<uknow> parameter for [lake_AcceptPow()],}

\item{param_Lake_acp_gamma}{<uknow> parameter for [lake_AcceptPow()],}

\item{RIVER_water_m3}{(m3) river water volume}

\item{RIVER_inflow_m3}{(m3/TS) river inflow volume}

\item{RIVER_velocity_km}{(km/TS) river velocity}

\item{RIVER_length_km}{(km) river length}

\item{Riverlak_water_m3}{(m3) water volume in the river-lake system}

\item{Riverlak_inflow_m3}{(m3) inflow volume to the river-lake system}

\item{Riverlak_capacity_m3}{(m3) total capacity of the river-lake system}

\item{param_Riverlak_lin_storeFactor}{<uknow> parameter for [riverlak_LinearResorvoir()],}

\item{Reservoi_water_m3}{(m3) volume of water in the reservoir}

\item{Reservoi_inflow_m3}{(m3/TS) inflow to the reservoir}

\item{Reservoi_capacity_m3}{(m3) reservoir capacity}

\item{Reservoi_demand_m3}{(m3/TS) water demand from the reservoir}

\item{Reservoi_yearInflow_m3}{(m3/TS) annual mean inflow to the reservoir}

\item{Reservoi_yearDemand_m3}{(m3/TS) annual mean water demand from the reservoir}

\item{Reservoi_yearRelase_m3}{(m3/TS) reference to annual mean water release from the reservoir}

\item{Reservoi_isOperateStart_01}{(01) indicates if reservoir operation has started (0 or 1)}

\item{Reservoi_isIrrigate_01}{(01) indicates if the reservoir is used for irrigation (0 or 1)}

\item{param_Reservoi_han_alpha}{<uknow> parameter for [reservoi_Hanasaki()],}

\item{param_Reservoi_han_kDemand}{<uknow> parameter for [reservoi_Hanasaki()],}

\item{CONFLUEN_cellInflow_m3}{(m3 / TS) input water volum in every routeline}

\item{CELL_cellNumberStep_int}{(int) step number of basin cells}

\item{CELL_inflowCellNumberStep_int}{(int) step number of inflow cells in the basin}
}
\value{
ATMOS_snow_mm (mm/m2/TS) snowfall volume

potential evapotranspiration (mm/m2)

outflow (m3)

outflow (m3)
}
\description{
Hydrological Process
}
